datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Employees {
  EmployeeID         Int      @id @unique @default(autoincrement())
  Name               String
  Position           String
  SkillSet           String?
  AvailabilityStatus Boolean
  createdAt          DateTime @default(now())

  Tasks    Tasks[]    @relation("AssignedTasks")
  Schedule Schedule[]
}

model Machinery {
  MachineID                     Int       @id @unique @default(autoincrement())
  Type                          String
  MaintenanceStatus             String
  LastMaintenanceDate           DateTime?
  PredictiveMaintenanceRequired Boolean   @default(false)
  createdAt                     DateTime  @default(now())

  MaintenanceSchedule MaintenanceSchedule[]
}

model MaintenanceSchedule {
  MaintenanceID   Int      @id @unique @default(autoincrement())
  MachineID       Int
  ScheduledDate   DateTime
  MaintenanceType String
  Status          String
  createdAt       DateTime @default(now())

  Machinery Machinery @relation(fields: [MachineID], references: [MachineID], onDelete: Cascade)
}

model Schedule {
  ScheduleID         Int      @id @unique @default(autoincrement())
  EmployeeID         Int
  TaskID             Int
  ScheduledStartTime DateTime
  ScheduledEndTime   DateTime
  createdAt          DateTime @default(now())

  Employees Employees @relation(fields: [EmployeeID], references: [EmployeeID], onDelete: Cascade)
  Tasks     Tasks     @relation(fields: [TaskID], references: [TaskID], onDelete: Cascade)
}

model Tasks {
  TaskID             Int       @id @unique @default(autoincrement())
  TaskDescription    String?
  AssignedEmployeeID Int?
  SkillRequired      String?
  Status             String
  ScheduledDate      DateTime?
  DueDate            DateTime?
  createdAt          DateTime  @default(now())

  Employees Employees? @relation("AssignedTasks", fields: [AssignedEmployeeID], references: [EmployeeID], onDelete: SetNull)
  Schedule  Schedule[]
}
