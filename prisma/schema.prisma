datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Employees {
  EmployeeID         Int        @id @default(autoincrement())
  Name               String?
  Position           String
  SkillSet           String?
  AvailabilityStatus Boolean    @default(false)
  Tasks              Tasks[]    @relation("EmployeeTasks")
  Schedule           Schedule[]
  createdAt          DateTime   @default(now())
}

model Machinery {
  MachineID                     Int                   @id @default(autoincrement())
  Type                          String
  MaintenanceStatus             String                @db.VarChar(20)
  LastMaintenanceDate           DateTime?
  PredictiveMaintenanceRequired Boolean               @default(false)
  MaintenanceSchedule           MaintenanceSchedule[]
}

model Tasks {
  TaskID             Int        @id @default(autoincrement())
  TaskDescription    String?
  AssignedEmployee   Employees? @relation("EmployeeTasks", fields: [AssignedEmployeeID], references: [EmployeeID])
  AssignedEmployeeID Int?
  SkillRequired      String?
  Status             String     @db.VarChar(20)
  ScheduledDate      DateTime?
  DueDate            DateTime?
  Schedule           Schedule[]
}

model Schedule {
  ScheduleID         Int       @id @default(autoincrement())
  Employee           Employees @relation(fields: [EmployeeID], references: [EmployeeID])
  EmployeeID         Int
  Task               Tasks     @relation(fields: [TaskID], references: [TaskID])
  TaskID             Int
  ScheduledStartTime DateTime
  ScheduledEndTime   DateTime
}

model MaintenanceSchedule {
  MaintenanceID   Int       @id @default(autoincrement())
  Machine         Machinery @relation(fields: [MachineID], references: [MachineID])
  MachineID       Int
  ScheduledDate   DateTime
  MaintenanceType String    @db.VarChar(20)
  Status          String    @db.VarChar(20)
}
